1、CMakeLists.txt 
    a. project(my_cpp_pkg)
        生成的包名,运行时需要填写的名称  ！！！！
    b. find_package(std_msgs REQUIRED) 中添加需要添加的包名
        标准包rlcpp、std_msgs或自定义的包均可
    c. add_executable(my_node src/my_node.cpp)
        my_node : 生成的可执行文件的名称
        src/my_node.cpp : 需要依赖的源文件
    d. install(TARGETS
        my_node
        DESTINATION lib/${PROJECT_NAME})
        把编译好的文件安装到某个目录下
    
2、package.xml 添加依赖

    <build_depend>rclcpp</build_depend>
    <build_depend>std_msgs</build_depend>

3、主函数中Node("topicpublish") 初始化的节点名称(topicpublish)
    为使用 ros2 node list 和 rqt_graph查看到的节点名称 

4、msg文件 在使用前先编译好此文件
    A.需要以大写开头
    B.在CMakeLists.txt中添加
        find_package(rosidl_default_generators REQUIRED)
        
        # * 给接口文件生成源代码
        rosidl_generate_interfaces(
        ${package_name}
        "msg/Usrmsg.msg"
        )

        在 add_executable 后添加:
        # 3. 添加对生成的消息的依赖
        rosidl_get_typesupport_target(cpp_typesupport_target
        ${package_name} "rosidl_typesupport_cpp")

        # 4. 确保在构建节点之前生成消息
        rosidl_target_interfaces(${node_name} ${package_name}
        "rosidl_typesupport_cpp")

    C.在package.xml中添加
        <build_depend>rosidl_default_generators</build_depend>
        <exec_depend>rosidl_default_runtime</exec_depend>
        <member_of_group>rosidl_interface_packages</member_of_group>